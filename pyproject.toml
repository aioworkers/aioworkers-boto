[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "aioworkers-boto"
description = 'Connector and storage over boto'
readme = "README.md"
requires-python = ">=3.7"
license = "Apache-2.0"
keywords = [
  "aioworkers",
  "s3",
  "boto",
  "botocore",
]
authors = [
  { name = "Alexander Malev", email = "malev@somedev.ru" },
]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Framework :: AsyncIO",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "aioworkers",
  "aiobotocore",
]
dynamic = ["version"]

[project.optional-dependencies]
dev-lint = [
  "black==23.3.0",
  "isort==5.12.0",
  "mypy==1.2.0",
  "ruff==0.0.267",
  "types-PyYAML",
]
dev-test = [
  "aioworkers==0.21.1",
  "aiobotocore==2.5.0",
  "coverage[toml]==7.2.5",
  "pytest==7.3.1",
  "pytest-aioworkers[asyncio]==0.4",
  "pytest-mock==3.10.0",
  "pyyaml==6.0",
]

[project.urls]
Documentation = "https://github.com/aioworkers/aioworkers-boto#readme"
Issues = "https://github.com/aioworkers/aioworkers-boto/issues"
Source = "https://github.com/aioworkers/aioworkers-boto"

[tool.hatch.version]
path = "aioworkers_boto/__init__.py"

[tool.hatch.build.targets.sdist]
packages = ["aioworkers_boto"]

[tool.hatch.build.targets.wheel]
packages = ["aioworkers_boto"]

[tool.hatch.envs.default]
features = [
  "dev-test",
]
[tool.hatch.envs.default.scripts]
cov = "coverage run -m pytest && coverage combine && coverage report"
no-cov = "cov --no-cov"

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests", "aioworkers_boto"]

[[tool.hatch.envs.test.matrix]]
python = ["37", "38", "39", "310"]

[tool.coverage.run]
branch = true
parallel = true
omit = [
  "aioworkers_boto/__about__.py",
]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.black]
line-length = 100
target-version = ["py37", "py38", "py39", "py310"]

[tool.mypy]
ignore_missing_imports = true
check_untyped_defs = true

[tool.hatch.envs.style]
features = [
  "dev-lint",
]
[tool.hatch.envs.style.scripts]
check = [
  "ruff check aioworkers_boto tests",
  "isort --check-only --diff aioworkers_boto tests",
  "black --check --diff aioworkers_boto tests",
  "mypy aioworkers_boto tests",
]
fmt = [
  "isort aioworkers_boto tests",
  "black aioworkers_boto tests",
  "check",
]
